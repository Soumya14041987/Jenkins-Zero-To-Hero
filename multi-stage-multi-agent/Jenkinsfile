pipeline {
    agent none

    stages {
        stage('Back-end') {
            agent {
                docker { image 'maven:3.8.1-adoptopenjdk-11' }
            }
            steps {
                sh 'mvn --version'
            }
        }
        stage('Front-end') {
            agent {
                docker { image 'node:16-alpine' }
            }
            steps {
                sh 'node --version'
            }
        }
        stage('Database') {
            agent {
                docker { image 'mysql:8.0' }
            }
            environment {
                MYSQL_ROOT_PASSWORD = 'root_password'
                MYSQL_DATABASE = 'my_database'
                MYSQL_USER = 'user'
                MYSQL_PASSWORD = 'password'
            }
            steps {
                sh '''
                docker run --name mysql-db -e MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} -e MYSQL_DATABASE=${MYSQL_DATABASE} -e MYSQL_USER=${MYSQL_USER} -e MYSQL_PASSWORD=${MYSQL_PASSWORD} -d mysql:8.0
                '''
            }
        }
    }

    post {
        always {
            node('master') { // Ensure the cleanup runs on the master node
                script {
                    // Clean up Docker containers and images
                    sh '''
                    docker stop mysql-db || true
                    docker rm mysql-db || true
                    docker system prune -af
                    '''
                }
            }
        }
    }
}

