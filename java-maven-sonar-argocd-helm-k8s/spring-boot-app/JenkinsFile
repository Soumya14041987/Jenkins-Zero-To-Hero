pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket to access Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // Uncomment and configure as needed
        // git branch: 'main', url: 'https://github.com/Soumya14041987/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // Build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://52.207.225.245:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "index.docker.io/dockerworld1987/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        script {
          // Display Docker version and info for debugging
          sh 'docker --version'
          sh 'docker info'
          
          // Build Docker image
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          
          // Docker login
          withCredentials([usernamePassword(credentialsId: 'dockerworld1987', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
            sh 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
          }

          // Push Docker image to registry
          docker.withRegistry('https://index.docker.io/v1/', 'dockerworld1987') {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero" // Update with your repo name
        GIT_USER_NAME = "Soumya14041987"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            # Set Git user configuration
            git config user.email "soumya14041987@gmail.com"
            git config user.name "Soumya14041987"
            
            # Print current branch
            echo "Current branch:"
            git branch
            
            # Replace image tag in deployment file
            BUILD_NUMBER=${BUILD_NUMBER}
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            
            # Check the status of the repository
            echo "Git status before commit:"
            git status
            
            # Add the changes to staging
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml || true
            
            # Commit changes if there are any
            if ! git diff --cached --quiet; then
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            else
              echo "No changes to commit."
            fi
            
            # Push changes to GitHub
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
